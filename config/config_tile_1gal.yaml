###################################################
# Recommended options to run this at nersc .
##################################################
# make_tiles_tt
# srun --nodes=15 --tasks-per-node=64 --cpus-per-task=1 --cpu-bind=cores python ./run_bfd.py --config config/config_tile.yaml
# everything else:
# srun --nodes=15 --tasks-per-node=2 --cpus-per-task=32 --cpu-bind=cores python ./run_bfd.py --config config/config_tile.yaml


###########################################
# FLOW for simulations : make_tiles_tt - make_targets - make_templates - cpp_part
# FLOW for data : measure_moments_targets - make_targets - measure_moments_templates - make_templates - cpp_part
##################################################


run:
     - make_tiles_tt
     - make_targets
     - make_templates
     - cpp_part
##
######################################################################
#                       general config
######################################################################


general:
    output_folder: '/home/vwetzell/Downloads/tiles_noblends_mask_effects_01_KBH/'
    # bfd settings ********
    n: 4.     #Default:  4.
    sigma: 0.55  # Default: 0.55
    pad_factor: 4. # Default: 4.
    # bands ***************
    band_dict: [['r',1.0]] # for simlated tiles, please just use 1 band.
    bands: ['r'] 
    MPI: Flase
    classes: 6 
 
######################################################################
#                       make_tiles_tt
######################################################################
make_tiles_tt:
    do: ['targets','templates']
    size_tile: 300 #300 number of pixels on a side. The normal pixel scale ->  1 pixel ~ 0.26 arcsec. Note that the most external 40 pixels are never used.
    
    gal_per_tile: 80 #80 #this is the number of injected galaxies per tile. The number of detected galaxies will depend on the noise level & detection step.
    number_of_replicas: 60 # see below. Basically the code saves 'number_of_replicas' tiles together to reduce the number of output files.
    n_targets: 60000 # the *total* number of injected targets will be n_targets * number_of replicas. For templates number_of_replicas is ignored.  
    n_templates: 2000 #
    
    models: '/home/vwetzell/git_repos/BFD_pipeline_vwetzell/data/all_100k_1_size.npy' # models used to inject galaxies.
    size_treshold: 1. # exclude models too big (size bigger than 1. arcsec).

    # noise of targets & templates ********
    noise_ext: [2.6,0.00000001,'GAUSS'] # Typical DES: [2.6,0.4,'GAUSS']
    noise_ext_templates: [0.00000026,0.0000001,'GAUSS']
    
    # *******
    grid_targets: True # if True, it avoids superposition of galaxies as it places galaxies on a grid
    grid_templates: True  #  if True, it avoids superposition of galaxies it places galaxies on a grid
    poisson: True # True or False depending whether is a Poisson-like sims or STAMP
    mode_detection: 'detection' #'detection' or 'input'. Use input for stamp-like sims, detection for Poisson-like sims.
    injecting_blends: False # This allows to inject fake blends at a given separation


    # psf settings ******
    PSF_TYPE: 'turb'
    turb: [1.1,0.000000001] #psf_fwhm =  config['turb'][0]+(np.random.random(1)*config['turb'][1])[0]. Typical values for DES [1.1,0.3]

    # ***********
    noiseless: False #if True, tiles won't have noise.


    mask_data: '/home/vwetzell/Downloads/tiles_noblends_mask_effects_01_KBH/' #set it to False to not have mask effects.
    interpolate_mask: False #it corrects masked pixels with galaxy models (either from shredder or the true models)
    mfrac: 0.1 #maximum masked fraction allowed - 0.1 typical for real cases.
    background: 0. #it adds a background to the tile
    background_subtraction: True # it tries to infer the background and subtract it.
    
    ## 
    ## 
    radius_blends_templates: 1.0 # In arcsec. It groups templates together within X arcsec. It doesn't deblend /templates &targets) within that radius.
    shredder: False # deblend neighbours ***
    perfect_deblender: True #it deblends neighbours with the true models
    g1: [0.02,-0.02]
    g2: [0.,0.]
    debug: False # saves tiles & stamps images for debuggin.
    
    

######################################################################
#                       make_target
######################################################################

make_targets:
    # additional cuts:
    sn_min: 7.
    sn_max: 30.
    Mf_max: 90000
    Mf_min: 0.


######################################################################
#                       make_templates
######################################################################

make_templates:
    sigma_max: 6.5 # we only keep templates within sigma_max (chi2 includes MX,MY,Mf,det supression)
    sigma_step: 1.2 #maximum shift between template
    xy_max: 2         
    sn_min: 2 # it removes templates associated to targets below this threshold
    sn_max: 80 #it removes templates associated to targets above this threshold

    sigma_group_templates: 0.0 # groups templates together. 0.3-0.5 typical values
    min_sn_regrouping: 80 # it doesn't re-group templates above this sn
    stage: ['resume_templates','compute','assembly'] # the compute stage might benefit from more simultaneous jobs, whereas assembly is memory intensive and needs less jobs per node.
                                

                                
######################################################################
#                       bayesian integration
######################################################################

cpp_part:
    bacth_size_templates: 2000000
    chunks: 20 # only used in default mode.
    image_sims: True
    bacth_size_targets: 100000000 
    option: default #options: default,noisetiers,noisetiers_chunks. In general, noisetiers_chunks recommended with multiple noisetiers and many templates.
    add_labels: ['ISp_','ISm_'] 
    stage: ['selection','selection_ave','split','integrate','assemble'] 
    path_cpp: '/home/vwetzell/git_repos/bfd_vwetzell/bin/'
