###################################################
# Recommended options to run this at nersc .
##################################################
# make_tiles_tt
# srun --nodes=20 --tasks-per-node=10 --cpus-per-task=6 --cpu-bind=cores --mem=110GB python run_pipeline_3s.py
# make_targets:
# srun --nodes=1 --tasks-per-node=1 --cpus-per-task=60 --cpu-bind=cores --mem=110GB python run_pipeline_3s.py
# make_templates:
# srun --nodes=20 --tasks-per-node=10 --cpus-per-task=6 --cpu-bind=cores --mem=110GB python run_pipeline_3s.py
# cpp_part
# srun --nodes=20 --tasks-per-node=2 --cpus-per-task=32 --cpu-bind=cores --mem=110GB python run_pipeline_3s.py
##################################################
# FLOW for simulations : make_tiles_tt - make_targets - make_templates - cpp_part
# FLOW for data : measure_moments_targets - make_targets - measure_moments_templates - make_templates - cpp_part
##################################################


# srun --nodes=1 --tasks-per-node=1 --cpus-per-task=60 --cpu-bind=cores --mem=110GB python run_pipeline_3s.py 
run:
     - make_tiles_tt
     #- make_targets
     #- make_templates
     #- cpp_part
##
######################################################################
#                       general config
######################################################################


general:
    output_folder: '/pscratch/sd/m/mgatti/BFD/tilerun_poisson_det_200templates_default_blends0arcsec'
    # bfd settings ********
    n: 4.     #Default:  4.
    sigma: 0.55  # Default: 0.55
    pad_factor: 4. # Default: 4.
    # bands ***************
    band_dict: [['r',1.0]] # for simlated tiles, please just use 1 band.
    bands: ['r'] 
    MPI: True
    classes: 6 
 
######################################################################
#                       make_tiles_tt
######################################################################
make_tiles_tt:
    do: ['targets','templates']
    
    size_tile: 500 #  number of pixels on a side. The normal pixel scale ->  1 pixel ~Â 0.26 arcsec. Note that the most external 40 pixels are never used.
    gal_per_tile: 30 #this is the number of injected galaxies per tile. The number of detected galaxies will depend on the noise level & detection step.
    number_of_replicas: 200 # see below.
    n_targets: 12000 # the *total* number of injected targets will be n_targets * number_of replicas. For templates number_of_replicas is ignored.  
    n_templates: 5000
    models: '/global/u2/m/mgatti/BFD_pipeline/data/all_100k_200_size.npy' # models used to inject galaxies.
    size_treshold: 1. # exclude models too big (size bigger than 1. arcsec).
    
    # noise of targets & templates ********
    noise_ext: [2.6,0.4,'GAUSS']
    noise_ext_templates: [0.0026,0.004,'GAUSS']
    
    # *******
    grid_targets: True #choose True for stamp-like sims. False for Poisson-like sims.
    grid_templates: True  #choose True for stamp-like sims. False for Poisson-like sims.
    poisson: False # True or False depending whether is a Poisson-like sims or not
    mode_detection: 'input' #'detection' or 'input'. Use input for stamp-like sims, detection for Poisson-like sims.

    # injecting blends with a given distance from first galaxy
    injecting_blends: False
    distance_blends: 0.
    
    # psf settings ******
    PSF_TYPE: 'turb'
    turb: [1.1,0.3] #psf_fwhm =  config['turb'][0]+(np.random.random(1)*config['turb'][1])[0]

    # ***********
    noiseless: False #if True, tiles won't have noise.
    maskless: True #if True, tiles won't have masks effects. [to be implemented]

    ## 
    radius_blends_templates: 2. # In arcsec. It groups templates together within X arcsec. It doesn't deblend /templates &targets) within that radius.
    shredder: True # deblend neighbours ***
    g1: [0.02,-0.02]
    g2: [0.,0.]
    debug: False # saves tiles & stamps images for debuggin.
    
    

######################################################################
#                       make_target
######################################################################

make_targets:
    # we divide the targets into bins depending on the covariance of Mf.
    # to compare with cov_mf take the power of two
    #sigmaM_min: 4.632   #   150
    #sigmaM_max: 7.8 # 15000
    # additional cuts:
    sn_min: 7.
    sn_max: 30.
    Mf_max: 90000
    Mf_min: 0.


######################################################################
#                       make_templates
######################################################################

make_templates:
    sigma_max: 6.5 # we only keep templates within sigma_max (chi2 includes MX,MY,Mf,det supression)
    sigma_step: 1.2 #maximum shift between template
    xy_max: 2         
    sn_min: 0 # minimum S/N on flux
    chunks: 5 # It makes templates from #obj tile /chunks deep fields galaxies at a time
    sn_max: 50000000000 # properties of the templates!!
    Mf_max: 900000 # properties of the templates!!
    Mf_min: 0.    # properties of the templates!!
    sigma_group_templates: 0.4
    stage: ['resume_templates','compute','assembly']  

                                

                                
######################################################################
#                       bayesian integration
######################################################################

cpp_part:
    bacth_size_templates: 2000000
    option: noisetiers_chunks 
    add_labels: ['ISp_','ISm_'] 
    stage: ['selection','selection_ave','split','integrate','assemble']
    